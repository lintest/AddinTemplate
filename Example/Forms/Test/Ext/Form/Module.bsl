&НаСервере
Перем ВК, Лог;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для каждого ЭлементСписка из СписокУзлов Цикл
		Элементы.Результаты.Развернуть(ЭлементСписка.Значение, Истина);
	КонецЦикла;
	СписокУзлов.Очистить();
	
//	ПодключитьОбработчикОжидания("ЗавершитьРаботу", 1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаботу()
	
	ЗавершитьРаботуСистемы(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ФайлОбработки = Новый Файл(ОбработкаОбъект.ИспользуемоеИмяФайла);
	ТекущийКаталог = ФайлОбработки.Путь;
	
	ИдКомпоненты = "_" + StrReplace(New UUID, "-", "");
	МакетКомпоненты = ОбработкаОбъект.ПолучитьМакет("NativeAddIn");
	АдресКомпоненты = ПоместитьВоВременноеХранилище(МакетКомпоненты, УникальныйИдентификатор);
	ПодключитьВнешнююКомпоненту(АдресКомпоненты, ИдКомпоненты, ТипВнешнейКомпоненты.Native);
	ВК = Новый("AddIn." + ИдКомпоненты + ".SimpleAlias");
	
	ВыполнитьТесты();
	
КонецПроцедуры

&НаСервере
Функция ТестВычислитьXML(ИмяКласса, ИмяТеста, Выражение)
	
	//Лог = Новый ЗаписьXML;
	//Лог.ОткрытьФайл(ТекущийКаталог + "autotest.log");
	//Лог.ЗаписатьНачалоЭлемента("testsuites");
	
	//Лог.ЗаписатьНачалоЭлемента("testsuite");
	//Лог.ЗаписатьАтрибут("name", "Свойства");
	//Лог.ЗаписатьАтрибут("timestamp", timestamp());
	//Лог.ЗаписатьКонецЭлемента();
	
	//Лог.ЗаписатьКонецЭлемента();
	//Лог.Закрыть();
	
	
	Лог.ЗаписатьНачалоЭлемента("testsuite");
	Лог.ЗаписатьАтрибут("classname", ИмяКласса);
	Лог.ЗаписатьАтрибут("name", ИмяТеста);
	Попытка
		Значение = Вычислить(Выражение);
		Лог.ЗаписатьНачалоЭлемента("system-out");
		Лог.ЗаписатьТекст(Значение);
		Лог.ЗаписатьКонецЭлемента();
	Исключение
		Значение = Неопределено;
		Информация = ИнформацияОбОшибке();
		Лог.ЗаписатьНачалоЭлемента("error");
		Лог.ЗаписатьАтрибут("message", КраткоеПредставлениеОшибки(Информация));
		Лог.ЗаписатьКонецЭлемента();
		
		Лог.ЗаписатьНачалоЭлемента("system-err");
		Лог.ЗаписатьТекст(ПодробноеПредставлениеОшибки(Информация));
		Лог.ЗаписатьКонецЭлемента();
	КонецПопытки;
	Лог.ЗаписатьКонецЭлемента();
	
	Возврат Значение;
	
КонецФункции

&НаСервере
Процедура ТестВыполнитьXML(ИмяКласса, ИмяТеста, Выражение)
	
	Лог.ЗаписатьНачалоЭлемента("testsuite");
	Лог.ЗаписатьАтрибут("classname", ИмяКласса);
	Лог.ЗаписатьАтрибут("name", ИмяТеста);
	Попытка
		Выполнить(Выражение);
	Исключение
		Информация = ИнформацияОбОшибке();
		Лог.ЗаписатьНачалоЭлемента("error");
		Лог.ЗаписатьАтрибут("message", КраткоеПредставлениеОшибки(Информация));
		Лог.ЗаписатьКонецЭлемента();
		
		Лог.ЗаписатьНачалоЭлемента("system-err");
		Лог.ЗаписатьТекст(ПодробноеПредставлениеОшибки(Информация));
		Лог.ЗаписатьКонецЭлемента();
	КонецПопытки;
	Лог.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

&НаСервере
Функция timestamp()
	
	Возврат Формат(ТекущаяУниверсальнаяДата(), "ДФ=гггг-ММ-ддTчч:мм:сс");
	
КонецФункции

&НаСервере
Функция ПрочитатьСтрокуJSON(ТекстJSON)
	
	Если ПустаяСтрока(ТекстJSON) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПоляДаты = Новый Массив;
	ПоляДаты.Добавить("CreationDate");
	ПоляДаты.Добавить("date");
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(ТекстJSON);
	Возврат ПрочитатьJSON(ЧтениеJSON, , ПоляДаты);
	
КонецФункции

&НаСервере
Функция ДобавитьГруппуТестов(Наименование)
	
	Стр = Результаты.ПолучитьЭлементы().Добавить();
	СписокУзлов.Добавить(Стр.ПолучитьИдентификатор());
	Стр.Наименование = Наименование;
	Возврат Стр;

КонецФункции

&НаСервере
Функция ТестВычислить(Группа, ИмяТеста, Выражение)
	
	Стр = Группа.ПолучитьЭлементы().Добавить();
	Стр.Наименование = ИмяТеста;
	Стр.Выражение = Выражение;
	Попытка
		Значение = Вычислить(Выражение);
		Стр.Значение = Значение;
	Исключение
		Значение = Неопределено;
		Информация = ИнформацияОбОшибке();
		Стр.ТекстОшибки = КраткоеПредставлениеОшибки(Информация);
		Стр.Подробности = ПодробноеПредставлениеОшибки(Информация);
		Стр.Ошибка = Истина;
		Группа.Ошибка = Истина;
	КонецПопытки;
	
	Возврат Значение;
	
КонецФункции

&НаСервере
Процедура ТестВыполнить(Группа, ИмяТеста, Выражение)
	
	Стр = Группа.ПолучитьЭлементы().Добавить();
	Стр.Наименование = ИмяТеста;
	Стр.Выражение = Выражение;
	Попытка
		Выполнить(Выражение);
	Исключение
		Значение = Неопределено;
		Информация = ИнформацияОбОшибке();
		Стр.ТекстОшибки = КраткоеПредставлениеОшибки(Информация);
		Стр.Подробности = ПодробноеПредставлениеОшибки(Информация);
		Стр.Ошибка = Истина;
		Группа.Ошибка = Истина;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьТесты()
	
	Группа = ДобавитьГруппуТестов("Свойства компоненты");
	ТестВычислить(Группа, "Получить:Version", "ВК.Version");
	ТестВычислить(Группа, "Получить:Версия", "ВК.Версия");
	ТестВычислить(Группа, "Получить:ВЕРСИЯ", "ВК.ВЕРСИЯ");
	ТестВычислить(Группа, "Получить:Текст", "ВК.Текст");
	ТестВычислить(Группа, "Получить:Проверка", "ВК.Проверка");
	ТестВыполнить(Группа, "Установить:Версия", "ВК.Текст = ""Тест""");
	ТестВыполнить(Группа, "Установить:Проверка", "ВК.Проверка = ""Тест""");
	
	Группа = ДобавитьГруппуТестов("Методы компоненты");
	ТестВыполнить(Группа, "УстановитьТекст()", "ВК.УстановитьТекст(""Тест"")");
	ТестВычислить(Группа, "ПолучитьТекст()", "ВК.ПолучитьТекст()");
	
КонецПроцедуры